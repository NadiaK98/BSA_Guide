bsa$leftrigh <- as.numemric(bsa$leftrigh)
bsa$leftrigh <- as.numemric(bsa$leftrigh)
bsa$leftrigh <- as.numemric(bsa$leftrigh)
bsa$leftrigh <- as.numemric(bsa$leftrigh)
library(dplyr)
bsa$leftrigh <- as.numemric(bsa$leftrigh)
class(bsa$leftrigh)
mean(bsa$lefrrigh, na.rm = T)
mean(bsa_copy$lefrrigh, na.rm = T)
library(Hmisc)
bsa$leftrigh <- as.numemric(bsa$leftrigh)
bsa$leftrigh <- as.numeric(bsa$leftrigh)
mean(bsa_copy$lefrrigh, na.rm = T)
mean(bsa_copy$leftrigh, na.rm = T)
round(mean(bsa$leftrigh,na.rm=T),2)
t3< - crosstab(bsa$HEdQual3, bsa$PartyId2, prop.c=T, plot=F,chisq=T, bsa$WtFactor)
t2 < - crosstab(bsa$HEdQual3, bsa$PartyId2, prop.c=T, plot=F,chisq=T, bsa$WtFactor)
par(mar=c(5,10,4,2))
barplot((t2$prop.col*100), horiz=T,las=1)
barplot((t2$prop.col*100), horiz=T,las=1, zoom=2)
barplot((t2$prop.col*100), horiz=T,las=1)
barplot((t2$prop.col*100), horiz=T,las=1)
barplot((t2$prop.col*100), horiz=T,las=1)
barplot((t2$prop.col*100), horiz=T,las=1)
barplot((t2$prop.col*100), horiz=T,las=1)
#import data from .sav to spss format
bsa <- read.spss("bsa_2017_open_enviropol.sav", to.data.frame = TRUE)
library(foreign)
library(haven)
bsa <- read_sav("bsa_2017_open_enviropol.sav")
View(bsa)
#import data from .sav to spss format
bsa2 <- read.spss("bsa_2017_open_enviropol.sav", to.data.frame = TRUE)
sum(is.na(bsa))
sum(is.na(bsa2))
bsa3 <- read_spss("bsa_2017_open_enviropol.sav")
View(bsa2)
View(bsa3)
View(bsa)
View(bsa2)
knitr::opts_chunk$set(echo = TRUE)
inputPanel(
selectInput("n_breaks", label = "Number of bins:",
choices = c(10, 20, 35, 50), selected = 20),
sliderInput("bw_adjust", label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)
)
#import data from .sav to spss format
bsa2 <- read.spss("bsa_2017_open_enviropol.sav", to.data.frame = TRUE)
library(png)
library(tinytex)
library(devtools)
library(foreign)
library(janitor)
library(haven)
library(Hmisc)
#import data from .sav to spss format
bsa2 <- read.spss("bsa_2017_open_enviropol.sav", to.data.frame = TRUE)
View(bsa2)
View(bsa2)
summary(bsa2$leftrigh)
class(bsa2$leftrigh)
table(bsa2$leftrigh)
bsa <- read_sav("bsa_2017_open_enviropol.sav")
bsa3 <- read_spss("bsa_2017_open_enviropol.sav")
rm(bsa)
rm(bsa2)
rm(bsa3)
rm(bsa)
bsa <- read_sav("bsa_2017_open_enviropol.sav")
library(png)
library(tinytex)
library(devtools)
library(foreign)
library(janitor)
library(haven)
library(Hmisc)
?getwd
??foreign
view(bsa)
View(bsa)
dim(bsa)
bsa[6, 4]
bsa[6,4]
bsa[6,3]
bsa[6,4]
summary(bsa$Married)
levels(bsa$Married)
bsa$Married
class(bsa$Married)
class(bsa$Married)
class(bsa$Rsex)
#import data from .sav to spss format
bsa <- read.spss("bsa_2017_open_enviropol.sav", to.data.frame = TRUE)
class(bsa$Rsex)
bsa3 <- read_spss("bsa_2017_open_enviropol.sav")
#import data from .sav to spss format
bsa <- read.spss("bsa_2017_open_enviropol.sav", to.data.frame = TRUE)
bsa2 <- read_sav("bsa_2017_open_enviropol.sav")
bsa3 <- read_spss("bsa_2017_open_enviropol.sav")
bsa2$Rsex
levels(bsa2$Rsex)
class(bsa2$Rsex)
class(bsa3$Rsex)
bsa2$Rsex <- as.factor(bsa2$Rsex)
bsa2$Rsex <- as.factor(bsa2$Rsex)
class(bsa2$Rsex)
summary(bsa$Rsex)
class(bsa$leftrigh)                       #check to see if it is numeric
bsa$leftrigh <- as.numeric(bsa$leftrigh)  #covert to numeric
class(bsa$leftrigh)                       #check to see if it is numeric
bsa$leftrigh_log <- log(bsa$leftrigh)     #create new log of the leftright variable
class(bsa2$leftrigh)                       #check to see if it is numeric
class(bsa3$leftrigh)                       #check to see if it is numeric
class(bsa$leftrigh)                       #check to see if it is numeric
bsa$leftrigh_log <- log(bsa$leftrigh)     #create new log of the leftright variable
levels(bsa$Married)
levels(bsa2$Married)
bsa$Married <- as.factor(bsa$Married)
bsa$Married2 <- bsa$Married     #Create a new variable that copies the original level
levels(bsa$Married2)            #check the levels are the same
levels(bsa$Married2) <- c("Married/living as married", "Not Married", "Widowed", "Not Married")
levels(bsa$Married2)
bsa_copy <- bsa
sum(is.na(bsa_copy))
bsa_copy <- na.omit(bsa_copy)
sum(is.na(bsa_copy))
bsa_copy <- bsa
bsa_copy$Rsex <- na.omit(bsa_copy$Rsex)
full_bsa <-  bsa_copy[!complete.cases(bsa_copy)] bsa_copy <-
full_bsa <-  bsa_copy[!complete.cases(bsa_copy)] %>%
bsa_copy[complete.cases(bsa_copy)]
full_bsa <-  bsa_copy[!complete.cases(bsa_copy)] bsa_copy
full_bsa <- bsa_copy[!complete.cases(bsa_copy)] <- bsa_copy
full_bsa <- bsa_copy[!complete.cases(bsa_copy)] dropna <-
removed <- bsa_copy[complete.cases(bsa_copy), ]
View(bsa_copy)
View(bsa_copy)
removed <- bsa_copy[complete.cases(bsa_copy), 5:7]
removed <- bsa_copy[complete.cases(bsa_copy[, 5:7]),]
bsa_copy$eq_inc_quintiles %>%
drop_na()
libary(tidyr)
library(tidyr)
bsa_copy$eq_inc_quintiles %>%
drop_na()
bsa_copy$Rsex %>%
drop_na()
bsa_copy %>%
drop_na()
1 <- bsa_copy %>%
drop_na()
s <- bsa_copy %>%
drop_na()
bsa_copy$leftrigh %>%
drop_na()
complete.cases(bsa_copy)
complete_bsa <- bsa_copy[complete.cases(bsa_copy), ]
sum(complete.cases(bsa_copy))
sum(is.na(bsa$ChildHh))
sum(is.na(bsa$eq_inc_quintiles))
removed <- bsa_copy$ChildHh[complete.cases(bsa_copy$eq_inc_quintiles]
removed <- bsa_copy$ChildHh[complete.cases(bsa_copy$eq_inc_quintiles)]
sum(is.na(bsa$eq_inc_quintiles))  #sum = 1990
removed <- bsa_copy$eq_inc_quintiles[complete.cases(bsa_copy$eq_inc_quintiles)]
sum(is.na(bsa$eq_inc_quintiles))  #sum = 1990
summary(bsa$leftrigh)
summary(bsa$leftrigh, na.rm = T)
summary(bsa$leftrigh, na.rm = F)
summary(bsa$leftrigh, na.rm = T)
describe(bsa$leftrigh)
mean(bsa$leftrigh, na.rm = T)
hist(bsa$leftrigh)
boxplot(bsa$leftrigh)
density(bsa$leftrigh)
library(help = "graphics")
barplot(bsa$leftrigh)
plot(bsa$leftrigh)
mosaicplot(bsa$leftrigh)
mosaicplot(bsa$leftrigh, na.rm = T)
spineplot(bsa$leftrigh)
grid(bsa$leftrigh)
ggplot(bsa, aes(x = leftrigh)) +
geom_histogram(binwidth = 1)
ggplot(bsa, aes(x = leftrigh)) +
geom_histogram(binwidth = 1) +
facet_grid(Rsex ~ .)
ggplot(bsa, aes(x = leftrigh)) +
geom_histogram(binwidth = 1) +
facet_grid(Rsex ~ .) +
theme(legend.position = "none")
ggplot(bsa, aes(x = leftrigh)) +
geom_histogram(binwidth = 1) +
facet_grid(Rsex ~ .) +
theme(legend.position = "none")
ggplot(bsa, aes(x = leftrigh, fill = Rsex)) +
geom_histogram(binwidth = 1) +
facet_grid(Rsex ~ .) +
theme(legend.position = "none")
ggplot(bsa, aes(x = leftrigh, fill = Rsex)) +
geom_histogram(position = "identity", alpha = 0.2)
ggplot(bsa, aes(x = leftrigh, fill = Rsex)) +
geom_histogram(position = "identity", alpha = 0.3)
ggplot(bsa, aes(x = leftrigh, fill = Rsex)) +
geom_histogram(position = "identity", alpha = 0.5)
ggplot(bsa, aes(x = leftrigh, fill = Rsex)) +
geom_histogram(position = "identity", alpha = 0.3)
ggplot(bsa, aes(x = log10(leftrigh +1), fill = Rsex)) +
geom_histogram(position = "identity", alpha = 0.3)
ggplot(aes(), aes(x = 1, y = leftrigh)) +
geom_boxplot() +
scale_x_continuous(breaks = NULL) + #removes the tick markers from the x axis
theme(axis.title.x = element_blank())
ggplot(bsa(), aes(x = 1, y = leftrigh)) +
geom_boxplot() +
scale_x_continuous(breaks = NULL) + #removes the tick markers from the x axis
theme(axis.title.x = element_blank())
ggplot(bsa, aes(x = 1, y = leftrigh)) +
geom_boxplot() +
scale_x_continuous(breaks = NULL) + #removes the tick markers from the x axis
theme(axis.title.x = element_blank())
ggplot(aes, aes(x = Rsex, y=log10(leftrigh + 1))) +
geom_boxplot()
ggplot(bsa, aes(x = Rsex, y=log10(leftrigh + 1))) +
geom_boxplot()
ggplot(bsa, aes(x = Rsex, y=leftrigh) +
ggplot(bsa, aes(x = Rsex, y=leftrigh) +
ggplot(bsa, aes(x = Rsex, y=leftrigh) +
geom_boxplot())
ggplot(bsa, aes(x = Rsex, y=leftrigh) +
ggplot(bsa, aes(x = Rsex, y=leftrigh)) +
geom_boxplot()
ggplot(bsa, aes(x = HEdQual3, y=leftrigh)) +
geom_boxplot()
ggplot(filter(bsa, !is.na(HedQual3) & !is.na(leftrigh)),
aes(x = reorder(HeDQual3, leftrigh, FUN = median), y = leftrigh)) +
geom_boxplot()
ggplot(filter(bsa, !is.na(HEdQual3) & !is.na(leftrigh)),
aes(x = reorder(HEDQual3, leftrigh, FUN = median), y = leftrigh)) +
geom_boxplot()
ggplot(filter(bsa, !is.na(HEdQual3) & !is.na(leftrigh)),
aes(x = reorder(HEdQual3, leftrigh, FUN = median), y = leftrigh)) +
geom_boxplot()
ggplot(filter(bsa, !is.na(HEdQual3) & !is.na(leftrigh)),
aes(x = reorder(HEdQual3, leftrigh, FUN = median), y = leftrigh)) +
geom_boxplot()
ggplot(filter(bsa, !is.na(HEdQual3) & !is.na(leftrigh)),
aes(x = reorder(HEdQual3, leftrigh, FUN = median), y = leftrigh)) +
geom_boxplot()
ggplot(filter(bsa, !is.na(bsa$HEdQual3) & !is.na(leftrigh)),
aes(x = reorder(HEdQual3, leftrigh, FUN = median), y = leftrigh)) +
geom_boxplot()
ggplot(filter(bsa, !is.na(bsa$HEdQual3) & !is.na(bsa$leftrigh)),
aes(x = reorder(HEdQual3, leftrigh, FUN = median), y = leftrigh)) +
geom_boxplot()
bsa$HEdQual3 <- as.factor(bsa$HEdQual3)
ggplot(bsa, aes(x = HEdQual3, y=leftrigh)) +
geom_boxplot()
ggplot(filter(bsa, !is.na(HEdQual3) & !is.na(leftrigh)),
aes(x = reorder(Qual3, leftrigh, FUN = median), y = leftrigh)) +
geom_boxplot()
library(dplyr)
ggplot(filter(bsa, !is.na(HEdQual3) & !is.na(leftrigh)),
aes(x = reorder(Qual3, leftrigh, FUN = median), y = leftrigh)) +
geom_boxplot()
ggplot(filter(bsa, !is.na(HEdQual3) & !is.na(leftrigh)),
aes(x = reorder(HEdQual3, leftrigh, FUN = median), y = leftrigh)) +
geom_boxplot()
ggplot(filter(bsa, !is.na(HEdQual3) & !is.na(leftrigh)),
aes(x = reorder(HEdQual3, leftrigh, FUN = median), y = leftrigh)) +
geom_boxplot() +
theme_bw()
cor.test(leftright, libauth, use='complete.obs')
cor.test(leftrigh, libauth, use='complete.obs')
cor.test(bsa$leftrigh, bsa$libauth, use='complete.obs')
bsa$libauth <- as.numeric(bsa$libauth)
cor.test(bsa$leftrigh, bsa$libauth, use='complete.obs')
cor(bsa$leftrigh, bsa$libauth, use='complete.obs')
ggplot(aes(), aes(x=HEdQual3)) +
geom_bar()
ggplot(bsa(), aes(x=HEdQual3)) +
geom_bar()
ggplot(bsa, aes(x=HEdQual3)) +
geom_bar()
ggplot(subset(bsa, !is.na(HEdQual3)), aes(x=HEdQual3)) +
geom_bar(mapping = aes(y = ..prop.., group = 1))
x <-filter(bsa, !is.na(HEdQual3), !is.na(Rsex))
ggplot(data=x, aes(x=HEdQual3, fill=Rsex)) +
geom_bar()
ggplot(data=x, aes(x=HEdQual3, fill=Rsex)) +
geom_bar(position = "fill")
x <-filter(bsa, !is.na(PartyID2), !is.na(Rsex))
x <-filter(bsa, !is.na(PartyId2), !is.na(Rsex))
ggplot(data=x, aes(x=PartyId2, fill=Rsex)) +
geom_bar()
ggplot(data=x, aes(x=PartyId2, fill=Rsex)) +
geom_bar(position = "fill")
class(bsa$Voted)
levels(bsa$Voted)
class(bsa$HEdQual3)
levels(bsa$HEdQual3)
table(bsa$Voted)
table(bsa$HEdQual3)
class(bsa$Voted)
table(bsa$HEdQual3)
levels(bsa$HEdQual3)
levels(bsa$HEdQual3)
levels(bsa$HEdQual3) <- list("Below A-Level" = "Higher educ below degree/A level",
"O level or eqivalent" = "O level or equiv/CSE")
levels(bsa$HEdQual3)
table(bsa$HEdQual3)
#import data from .sav to spss format
bsa <- read.spss("bsa_2017_open_enviropol.sav", to.data.frame = TRUE)
class(bsa$HEdQual3)
table(bsa$HEdQual3)
levels(bsa$HEdQual3) <- list("Below A-Level" = "Higher educ below degree/A level",
"O level" = "O level or equiv/CSE"
"Degree" = "Degree",
levels(bsa$HEdQual3) <- list("Below A-Level" = "Higher educ below degree/A level",
"O level" = "O level or equiv/CSE",
"Degree" = "Degree",
"No Qual"  = "No Qualification")
table(bsa$HEdQual3)
#import data from .sav to spss format
bsa <- read.spss("bsa_2017_open_enviropol.sav", to.data.frame = TRUE)
levels(bsa$HEdQual3) <- list("Below A-Level" = "Higher educ below degree/A level",
"O level" = "O level or equiv/CSE",
"Degree" = "Degree",
"No Qual"  = "No qualification")
table(bsa$HEdQual3)
levels(bsa$Voted)
contrasts(bsa$Voted)
levels(bsa$Voted)
contrasts(bsa$Voted)
#Reverse the order
bsa$Voted <- relevel(bsa$Voted, "Yes")
#Rename the levels so that it is clear we now mean yes to harsher treatment
levels(bsa$Voted <- c("No","Yes")
#Rename the levels so that it is clear we now mean yes to harsher treatment
levels(bsa$Voted) <- c("No","Yes")
#Rename the levels so that it is clear we now mean yes to harsher treatment
levels(bsa$Voted) <- c("No","Yes")
#Check that it matches in reverse the original variable
table(Arrests$harsher)
#Check that it matches in reverse the original variable
table(bsa$Voted)
#Check that it matches in reverse the original variable
contrasts(bsa$Voted)
#import data from .sav to spss format
bsa <- read.spss("bsa_2017_open_enviropol.sav", to.data.frame = TRUE)
table(bsa$Voted)
levels(bsa$HEdQual3) <- list("Below A-Level" = "Higher educ below degree/A level",
"O level" = "O level or equiv/CSE",
"Degree" = "Degree",
"No Qual"  = "No qualification")
contrasts(bsa$Voted)
#Reverse the order
bsa$Voted <- relevel(bsa$Voted, "Yes")
"
#Check that it matches in reverse the original variable
table(bsa$Voted)
#Check that it matches in reverse the original variable
table(bsa$Voted)
#Check that it matches in reverse the original variable
table(bsa$Voted)
#Check that it matches in reverse the original variable
contrasts(bsa$Voted)
#Rename the levels so that it is clear we now mean yes to voted
levels(bsa$Voted) <- c("No","Yes")
#Check that it matches in reverse the original variable
contrasts(bsa$Voted)
#Check the contrasts
table(bsa$Voted)
#Reverse the order
bsa$Voted <- relevel(bsa$Voted, "No")
#Rename the levels so that it is clear we now mean yes to voted
levels(bsa$Voted) <- c("No","Yes")
#Check the contrasts
table(bsa$Voted)
#Rename the levels so that it is clear we now mean yes to voted
levels(bsa$Voted) <- c("Yes","No")
#Check the contrasts
table(bsa$Voted)
#Reverse the order
bsa$Voted <- relevel(bsa$Voted, "Yes")
#Rename the levels so that it is clear we now mean yes to voted
levels(bsa$Voted) <- c("Yes","No")
#Check the contrasts
table(bsa$Voted)
#Check the contrasts
contrasts(bsa$Voted)
table(bsa$Voted)
#import data from .sav to spss format
bsa <- read.spss("bsa_2017_open_enviropol.sav", to.data.frame = TRUE)
table(bsa$Voted)
levels(bsa$HEdQual3) <- list("Below A-Level" = "Higher educ below degree/A level",
"O level" = "O level or equiv/CSE",
"Degree" = "Degree",
"No Qual"  = "No qualification")
contrasts(bsa$Voted)
levels(bsa$Voted)
contrasts(bsa$Voted)
#Reverse the order
bsa$Voted2 <- relevel(bsa$Voted, "No")
#Rename the levels so that it is clear we now mean yes to voted
levels(bsa$Voted2) <- c("Yes","No")
#Check the contrasts
contrasts(bsa$Voted)
#Check the contrasts
table(bsa$Voted)
#Check the contrasts
table(bsa$Voted2)
#Reverse the order
bsa$Voted2 <- relevel(bsa$Voted, ref = "No")
#Check the contrasts
table(bsa$Voted2)
#Check the contrasts
contrasts(bsa$Voted2)
fit1 <- glm(voted ~ HEdQual3, data=bsa, family = "binomial")
fit1 <- glm(Voted ~ HEdQual3, data=bsa, family = "binomial")
summary(fitl_1)
summary(fit1)
fit1 <- glm(Voted ~ HEdQual3, data=bsa, family = "binomial")
summary(fit1)
fit2 <- glm(Voted ~ HEdQual3 + RSex, data=bsa, family = "binomial")
fit2 <- glm(Voted ~ HEdQual3 + Rsex, data=bsa, family = "binomial")
summary(fit2)
```{r}
fit2 <- glm(Voted ~ HEdQual3 + Rsex, data=bsa, family = "binomial")
summary(fit2)
fit2 <- glm(Voted ~ HEdQual3 + Rsex, data=bsa, family = "binomial")
summary(fit2)
fit1 <- glm(Voted ~ HEdQual3, data=bsa, family = "binomial")
summary(fit1)
exp(cbind(OR = coef(fit2), confint(fit2))) #This will print both the OR and their 95% CI.
fit2 <- glm(Voted ~ HEdQual3 + Rsex + RAgeCat, data=bsa, family = "binomial")
summary(fit2)
```{r, eval = TRUE, echo=TRUE}
exp(cbind(OR = coef(fit2), confint(fit2))) #This will print both the OR and their 95% CI.
exp(cbind(OR = coef(fit2), confint(fit2))) #This will print both the OR and their 95% CI.
AIC(fit1, fit2)
library(sjPlot)
plot_model(fit1)
plot_model(fit2)
#import data from .sav to spss format
bsa <- read.spss("bsa_2017_open_enviropol.sav", to.data.frame = TRUE)  #foreign
levels(bsa$Rsex)
class(bsa$Rsex)
levels(bsa$Rsex)
bsa2 <- read_sav("bsa_2017_open_enviropol.sav")  #haven
bsa3 <- read_spss("bsa_2017_open_enviropol.sav") #haven
class(bsa$Rsex)
class(bsa2$Rsex)
bsa2$Rsex <- as.factor(bsa2$Rsex)
class(bsa2$Rsex)
bsa3 <- read_spss("bsa_2017_open_enviropol.sav") #haven
class(bsa3$Rsex)
bsa3$Rsex <- as.factor(bsa3$Rsex)
#knitr::opts_chunk$set(echo = TRUE)
library(png)
library(tinytex)
library(devtools)
library(foreign)
library(janitor)
library(haven)
library(Hmisc)
#import data from .sav to spss format
bsa <- read.spss("bsa_2017_open_enviropol.sav", to.data.frame = TRUE)  #foreign
class(bsa$Rsex)
levels(bsa$Rsex)
#bsa2 <- read_sav("bsa_2017_open_enviropol.sav")  #haven
#bsa3 <- read_spss("bsa_2017_open_enviropol.sav") #haven
bsa$leftrigh <- as.numeric(bsa$leftrigh)
ggplot(filter(bsa, !is.na(HEdQual3) & !is.na(leftrigh)),
aes(x = reorder(HEdQual3, leftrigh, FUN = median), y = leftrigh)) +
geom_boxplot() +
theme_bw()
library(dplyr)
t2 < - crosstab(bsa$HEdQual3, bsa$PartyId2, prop.c=T, plot=F,chisq=T, bsa$WtFactor)
t2 < - crosstab(bsa$HEdQual3, bsa$PartyId2, prop.c=T, plot=F,chisq=T, bsa$WtFactor)
t1 <- crosstab(bsa$Rsex, bsa$PartyId2, prop.r=T,plot=F,chisq=T)
t1 <- crosstab(bsa$Rsex, bsa$PartyId2, prop.r=T,plot=F,chisq=T)
library(descr)
t1 <- crosstab(bsa$Rsex, bsa$PartyId2, prop.r=T,plot=F,chisq=T)
t2 < - crosstab(bsa$HEdQual3, bsa$PartyId2, prop.c=T, plot=F,chisq=T, bsa$WtFactor)
t2 <- crosstab(bsa$HEdQual3, bsa$PartyId2, prop.c=T, plot=F,chisq=T, bsa$WtFactor)
library(Mass)
data(Boston)
data("Boston")
install.packages("MASS")
library(MASS)
data(Boston)
ggplot(Boston, aes(x = medv, y = crim)) +
geom_point()
library(ggplot2)
ggplot(Boston, aes(x = medv, y = crim)) +
geom_point()
#knitr::opts_chunk$set(echo = TRUE)
library(png)
library(tinytex)
library(devtools)
library(devtools)
library(foreign)
library(janitor)
library(haven)
library(Hmisc)
library(janitor)
library(haven)
library(Hmisc)
#import data from .sav to spss format
bsa <- read.spss("bsa_2017_open_enviropol.sav", to.data.frame = TRUE)  #foreign
View(bsa)
